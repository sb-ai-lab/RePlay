[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 120
target-versions = ["py38", "py39", "py310", "py311"]

[tool.poetry]
name = "replay-rec"
packages = [{include = "replay"}]
license = "Apache-2.0"
description = "RecSys Library"
authors = [
    "AI Lab",
    "Alexey Vasilev",
    "Anna Volodkevich",
    "Alexey Grishanov",
    "Yan-Martin Tamm",
    "Boris Shminke",
    "Alexander Sidorenko",
    "Roza Aysina",
]
readme = "README.md"
homepage = "https://sb-ai-lab.github.io/RePlay/"
repository = "https://github.com/sb-ai-lab/RePlay"
classifiers = [
    "Operating System :: Unix",
    "Intended Audience :: Science/Research",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
exclude = [
    "replay/conftest.py",
{% if project == "default" %}
    "replay/experimental",
{% endif %}
]
version = "0.0.0"

[tool.poetry.dependencies]
python = ">=3.8.1, <3.12"
numpy = ">=1.20.0"
pandas = ">=1.3.5, <=2.2.2"
polars = "~1.0.0"
optuna = "~3.2.0"
scipy = "^1.8.1"
psutil = "~6.0.0"
scikit-learn = "^1.0.2"
pyarrow = ">=12.0.1"
{% if project == "default" %}
pyspark = [
    {version = ">=3.4,<3.6", python = ">=3.11,<3.12", optional = true},
    {version = ">=3.0,<3.6", python = ">=3.8.1,<3.11", optional = true},
]
torch = {version = ">=1.8, <=2.5.0", optional = true}
lightning = {version = ">=2.0.2, <=2.4.0", optional = true}
pytorch-ranger = {version = "^0.1.1", optional = true}
{% endif %}
fixed-install-nmslib = "2.1.2"
hnswlib = "^0.7.0"
{% if project == "experimental" %}
pyspark = [
    {version = ">=3.4,<3.5", python = ">=3.11,<3.12"},
    {version = ">=3.0,<3.5", python = ">=3.8.1,<3.11"},
]
torch = ">=1.8, <=2.4.0"
lightning = ">=2.0.2, <=2.4.0"
pytorch-ranger = "^0.1.1"
lightfm = "1.17"
lightautoml = "~0.3.1"
numba = ">=0.50"
llvmlite = ">=0.32.1"
sb-obp = "^0.5.8"
d3rlpy = "^2.0.4"
implicit = "~0.7.0"
gym = "^0.26.0"
{% endif %}

[tool.poetry.extras]
spark = ["pyspark"]
torch = ["torch", "pytorch-ranger", "lightning"]
all = ["pyspark", "torch", "pytorch-ranger", "lightning"]

[tool.poetry.group.dev.dependencies]
jupyter = "~1.0.0"
jupyterlab = "^3.6.0"
pytest = ">=7.1.0"
pytest-cov = ">=3.0.0"
statsmodels = "~0.14.0"
black = ">=23.3.0"
ruff = ">=0.0.261"
toml-sort = "^0.23.0"
sphinx = "5.3.0"
sphinx-rtd-theme = "1.2.2"
sphinx-autodoc-typehints = "1.23.0"
sphinx-enum-extend = "0.1.3"
myst-parser = "1.0.0"
ghp-import = "2.1.0"
docutils = "0.16"
data-science-types = "0.2.23"
filelock = "~3.14.0"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """0.18.1{{ env['PACKAGE_SUFFIX'] }}"""
vcs = "git"

[tool.ruff]
exclude = [".git", ".venv", "__pycache__", "env", "venv", "docs", "projects", "examples"]
extend-select = ["C90", "T10", "T20", "UP004"]
line-length = 120
select = ["ARG", "C4", "E", "EM", "ERA", "F", "FLY", "I", "INP", "ISC", "N", "PERF", "PGH", "PIE", "PYI", "Q", "RUF", "SIM", "TID", "W"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = false

[tool.ruff.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.mccabe]
max-complexity = 13

[tool.ruff.per-file-ignores]
"*/" = ["PERF203", "RUF001", "RUF002", "RUF012", "E402"]
"__init__.py" = ["F401"]
"replay/utils/model_handler.py" = ["F403", "F405"]
"tests/*" = ["ARG", "E402", "INP", "ISC", "N", "S", "SIM", "F811"]
"tests/experimental/*" = ["F401", "F811"]
"replay/experimental/models/extensions/spark_custom_models/als_extension.py" = ["ARG002", "N802", "N803", "N815"]
"replay/data/nn/sequence_tokenizer.py" = ["ARG003"]
"replay/splitters/base_splitter.py" = ["ARG003"]
"replay/data/nn/sequential_dataset.py" = ["ARG003"]

[tool.tomlsort]
ignore_case = true
in_place = true
no_comments = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
