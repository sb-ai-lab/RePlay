[build-system]
requires = [
    "poetry-core>=2.0.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
    "setuptools",
]
build-backend = "poetry_dynamic_versioning.backend"

[project]
name = "replay-rec"
license = "Apache-2.0"
description = "RecSys Library"
authors = [
    {name = "AI Lab"},
    {name = "Alexey Vasilev"},
    {name = "Anna Volodkevich"},
    {name = "Alexey Grishanov"},
    {name = "Yan-Martin Tamm"},
    {name = "Boris Shminke"},
    {name = "Alexander Sidorenko"},
    {name = "Roza Aysina"},
]
readme = "README.md"
classifiers = [
    "Operating System :: Unix",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9, <3.13"
dependencies = [
    "setuptools",
    "numpy (>=1.20.0,<2)",
    "pandas (>=1.3.5,<2.4.0)",
    "polars (<2.0)",
    "scipy (>=1.13.1,<1.14)",
    "scikit-learn (>=1.6.1,<1.7.0)",
    "pyarrow (<22.0)",
    "tqdm (>=4.67,<5)",
{% if project == "default" %}
    "pyspark (>=3.0,<3.5); extra == 'spark'",
    "psutil (<=7.0.0); extra == 'spark'",
    "torch (>=1.8, <3.0.0); extra == 'torch' or extra == 'torch-cpu'",
    "pytorch-optimizer (>=3.8.0,<3.9.0); extra == 'torch' or extra == 'torch-cpu'",
    "lightning (<2.6.0); extra == 'torch' or extra == 'torch-cpu'",
{% endif %}
{% if project == "experimental" %}
    "torch (>=1.8,<3.0.0)",
    "lightning (>=2.0.2,<=2.4.0)",
    "pytorch-optimizer (>=3.8.0,<4)",
    "lightautoml (>=0.4.1,<0.5)",
    "numba (>=0.50,<1)",
    "sb-obp (>=0.5.10,<0.6)",
    "d3rlpy (>=2.8.1,<2.9)",
    "implicit (>=0.7.2,<0.8)",
    "pyspark (>=3.0,<3.5)",
    "psutil (<=7.0.0)",
{% endif %}
]
dynamic = ["version", "dependencies"]

{% if project == "default" %}
[project.optional-dependencies]
spark = ["pyspark", "psutil"]
torch = ["torch", "pytorch-optimizer", "lightning"]
torch-cpu = ["torch", "pytorch-optimizer", "lightning"]

{% endif %}
[project.urls]
homepage = "https://sb-ai-lab.github.io/RePlay/"
repository = "https://github.com/sb-ai-lab/RePlay"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312"]

[tool.poetry]
packages = [{include = "replay"}]
exclude = [
    "replay/conftest.py",
{% if project == "default" %}
    "replay/experimental",
{% endif %}
]
version = "0.0.0"

{% if project == "default" %}
[tool.poetry.dependencies]
torch = [
    {markers = "extra == 'torch-cpu' and extra !='torch'", source = "torch-cpu-mirror"},
    {markers = "extra == 'torch' and extra !='torch-cpu'", source = "PyPI"},
]

{% endif %}
[dependency-groups]
dev = [
    "coverage-conditional-plugin (>=0.9, <1)",
    "jupyter (>=1.0, <1.1)",
    "jupyterlab (>=3.6, <4)",
    "pytest (>=7.1.0)",
    "pytest-cov (>=3.0)",
    "statsmodels (>=0.14, <0.15)",
    "black (>=23.3.0)",
    "ruff (>=0.0.261)",
    "toml-sort (>=0.23, <0.24)",
    "sphinx (==5.3.0)",
    "sphinx-rtd-theme (==1.2.2)",
    "sphinx-autodoc-typehints (==1.23.0)",
    "sphinx-enum-extend (==0.1.3)",
    "myst-parser (==1.0.0)",
    "ghp-import (==2.1.0)",
    "docutils (==0.16)",
    "data-science-types (==0.2.23)",
    "filelock (>=3.14, <3.15)"
]

{% if project == "default" %}
[[tool.poetry.source]]
name = "torch-cpu-mirror"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

{% endif %}
[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """0.20.0{{ env['PACKAGE_SUFFIX'] }}"""
vcs = "git"

[tool.ruff]
exclude = [".git", ".venv", "__pycache__", "env", "venv", "docs", "projects", "examples"]
line-length = 120

[tool.ruff.lint]
select = ["ARG", "C4", "E", "EM", "ERA", "F", "FLY", "I", "INP", "ISC", "N", "PERF", "PGH", "PIE", "PYI", "Q", "RUF", "SIM", "TID", "W"]
extend-select = ["C90", "T10", "T20", "UP004"]
ignore = ["SIM115"]
mccabe = {max-complexity = 13}
isort = {combine-as-imports = true, force-wrap-aliases = true}

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = false

[tool.ruff.lint.per-file-ignores]
"*/" = ["PERF203", "RUF001", "RUF002", "RUF012", "E402"]
"__init__.py" = ["F401"]
"replay/utils/model_handler.py" = ["F403", "F405"]
"tests/*" = ["ARG", "E402", "INP", "ISC", "N", "S", "SIM", "F811"]
"tests/experimental/*" = ["F401", "F811"]
"replay/experimental/models/extensions/spark_custom_models/als_extension.py" = ["ARG002", "N802", "N803", "N815"]
"replay/data/nn/sequence_tokenizer.py" = ["ARG003"]
"replay/splitters/base_splitter.py" = ["ARG003"]
"replay/data/nn/sequential_dataset.py" = ["ARG003"]

[tool.tomlsort]
ignore_case = true
in_place = true
no_comments = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
